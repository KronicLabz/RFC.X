{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["NFTCONTRACT","STAKINGCONTRACT","account","contract","vaultcontract","web3","Web3Alc","createAlchemyWeb3","providerOptions","binancechainwallet","package","walletconnect","WalletConnectProvider","options","infuraId","walletlink","WalletLink","appName","rpc","chainId","appLogoUrl","darkMode","web3Modal","Web3Modal","network","theme","cacheProvider","Nft","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nftdata","rawearn","setState","show","nftamount","outvalue","target","value","axios","get","concat","then","outputa","_this2","balance","data","console","log","config","X-API-Key","accept","headers","outputb","result","_connectwallet","asyncToGenerator","_regeneratorRuntime","mark","_callee6","provider","accounts","getstakednfts","getbalance","arraynft","tokenid","rwdArray","delay","delayedLog","_delayedLog","processArray","_processArray","wrap","_context6","prev","next","_callee5","_iterator","_step","item","_context5","_createForOfIteratorHelper","s","n","done","t0","e","f","finish","stop","apply","arguments","_x4","_callee4","sum","formatsum","_context4","reduce","a","b","Number","toFixed","document","getElementById","textContent","_x3","Promise","resolve","setTimeout","connect","sent","Web3","send","eth","getAccounts","Contract","ABI","VAULTABI","methods","tokensOfOwner","balanceOf","t1","Array","from","map","filter","forEach","_ref","_callee3","id","array","_context3","earningInfo","_ref2","_callee2","earned","earnedrwd","rewardx","numrwd","_context2","String","split","utils","fromWei","push","_x2","_x","abrupt","_verify","_callee7","_context7","_enable","_callee8","_context8","setApprovalForAll","_rewardinfo","_callee13","rawnfts","_delayedLog4","_processArray4","_context13","_callee12","_iterator2","_step2","_context12","_x8","_callee11","_context11","_x7","_ref3","_callee10","_context10","_ref4","_callee9","_context9","_x6","_x5","_claimit","_callee15","_context15","getMaxPriorityFeePerGas","tip","getBlock","block","baseFee","baseFeePerGas","maxPriority","maxFee","_ref5","_callee14","_context14","claim","maxFeePerGas","maxPriorityFeePerGas","_x9","_unstakeall","_callee17","_context17","_ref6","_callee16","_context16","unstake","_x10","react_default","createElement","className","class","style","fontFamily","fontWeight","fontSize","href","src","alt","width","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","onClick","borderRadius","Button","backgroundColor","boxShadow","color","textShadow","marginTop","scope","data-test-id","window","location","reload","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","App","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f07dd69a.chunk.js","sourcesContent":["export const NFTCONTRACT = \"0x252c4B998fC3B3Dd6e13F6868477f37a855f9e6E\";\r\nexport const STAKINGCONTRACT = \"0x15B76B01cA549473Fd3844f2Af97Be0f8f227BcC\";\r\nexport const etherscanapi = \"https://api.etherscan.io/YXH8ERRHWCY82R5VZ59R39SZU81MUPSEHY/\";\r\nexport const moralisapi = \"https://deep-index.moralis.io/api/v2/y8oGt2GEKCxEnMVKfpRVTlZjBPK0Cay9yxZxu0DScdd4In4jwdlJNH5cbU9pJFlE/\";\r\nexport const nftpng = \"https://ipfs.io/ipfs/QmQYdN9FnTqGLxDDztbRzBNFUCCV9ffMdqT7Mn2V8H4Uth/\";\r\n","import './App.css';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport 'sf-font';\nimport axios from 'axios';\nimport ABI from './ABI.json';\nimport VAULTABI from './VAULTABI.json';\nimport TOKENABI from './TOKENABI.json';\nimport { NFTCONTRACT, STAKINGCONTRACT, etherscanapi, moralisapi } from './config';\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLink from \"walletlink\";\nimport Web3 from 'web3';\nimport { createAlchemyWeb3 } from '@alch/alchemy-web3';\n\n\nvar account = null;\nvar contract = null;\nvar vaultcontract = null;\nvar web3 = null;\n\nconst Web3Alc = createAlchemyWeb3(\"https://eth-mainnet.g.alchemy.com/v2/LImfUcM87aQ4q0LLq3x798zzhuleAAvw\")\n\nconst moralisapikey = \"y8oGt2GEKCxEnMVKfpRVTlZjBPK0Cay9yxZxu0DScdd4In4jwdlJNH5cbU9pJFlE\";\nconst etherscanapikey = \"YXH8ERRHWCY82R5VZ59R39SZU81MUPSEHY\";\n\nconst providerOptions = {\n  binancechainwallet: {\n    package: true\n    },\n    walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"833c6e1dc3e44274b704999df7a92bfe\"\n    }\n  },\n  walletlink: {\n    package: WalletLink,\n    options: {\n      appName: \"Rich Fox Club\",\n      infuraId: \"833c6e1dc3e44274b704999df7a92bfe\",\n      rpc: \"\",\n      chainId: 1,\n      appLogoUrl: null,\n      darkMode: true\n    }\n  },\n};\n\nconst web3Modal = new Web3Modal({\n\tnetwork: \"ethereum\",\n\ttheme: \"dark\",\n\tcacheProvider: true,\n\tproviderOptions \n  });\n\nclass Nft extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tnftdata: [],\n\t\t\trawearn: [],\n\t\t};\n\t}\n  \n\thandleModal(){  \n\t\tthis.setState({show:!this.state.show})  \n\t} \n\n\thandleNFT(nftamount) {\n\t\tthis.setState({outvalue:nftamount.target.value});\n  \t}\n\n\tasync componentDidMount() {\n\t\t\n\t\tawait axios.get((etherscanapi + `?module=stats&action=tokensupply&contractaddress=${NFTCONTRACT}&apikey=${etherscanapikey}`))\n\t\t.then(outputa => {\n            this.setState({\n                balance:outputa.data\n            })\n            console.log(outputa.data)\n        })\n\t\tlet config = {'X-API-Key': moralisapikey, 'accept': 'application/json'};\n\t\tawait axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=etherum&format=decimal`), {headers: config})\n\t\t.then(outputb => {\n\t\t\tconst { result } = outputb.data\n            this.setState({\n                nftdata:result\n            })\n            console.log(outputb.data)\n        })\n\t}\n\n\nrender() {\n\tconst {balance} = this.state;\n\tconst {outvalue} = this.state;\n  \n\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n\n  const expectedBlockTime = 10000;\n\n  async function connectwallet() {\n    var provider = await web3Modal.connect();\n    web3 = new Web3(provider);\n    await provider.send('eth_requestAccounts');\n    var accounts = await web3.eth.getAccounts();\n    account = accounts[0];\n    document.getElementById('wallet-address').textContent = account;\n    contract = new web3.eth.Contract(ABI, NFTCONTRACT);\n    vaultcontract = new web3.eth.Contract(VAULTABI, STAKINGCONTRACT);\n    var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\n    document.getElementById('yournfts').textContent = getstakednfts;\n    var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\n    document.getElementById('stakedbalance').textContent = getbalance;\n    const arraynft = Array.from(getstakednfts.map(Number));\n\t\tconst tokenid = arraynft.filter(Number);\n\t\tvar rwdArray = [];\n    tokenid.forEach(async (id) => {\n      var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n      var array = Array.from(rawearn.map(Number));\n      console.log(array);\n      array.forEach(async (item) => {\n        var earned = String(item).split(\",\")[0];\n        var earnedrwd = Web3.utils.fromWei(earned);\n        var rewardx = Number(earnedrwd).toFixed(2);\n        var numrwd = Number(rewardx);\n        console.log(numrwd);\n        rwdArray.push(numrwd);\n      });\n    });\n    function delay() {\n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n    async function delayedLog(item) {\n      await delay();\n      var sum = item.reduce((a, b) => a + b, 0);\n      var formatsum = Number(sum).toFixed(2);\n      document.getElementById('earned').textContent = formatsum;\n    }\n    async function processArray(rwdArray) {\n      for (const item of rwdArray) {\n        await delayedLog(item);\n      }\n    }\n    return processArray([rwdArray]);\n  }\n\n  async function verify() {\n    var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\n    document.getElementById('yournfts').textContent = getstakednfts;\n    var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\n    document.getElementById('stakedbalance').textContent = getbalance;\n  }\n\n  async function enable() {\n    contract.methods.setApprovalForAll(STAKINGCONTRACT, true).send({ from: account });\n  }\n  async function rewardinfo() {\n    var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n    const arraynft = Array.from(rawnfts.map(Number));\n    const tokenid = arraynft.filter(Number);\n    var rwdArray = [];\n    tokenid.forEach(async (id) => {\n      var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n      var array = Array.from(rawearn.map(Number));\n      array.forEach(async (item) => {\n        var earned = String(item).split(\",\")[0];\n        var earnedrwd = Web3.utils.fromWei(earned);\n        var rewardx = Number(earnedrwd).toFixed(2);\n        var numrwd = Number(rewardx);\n        rwdArray.push(numrwd)\n      });\n    });\n    function delay() {\n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n    async function delayedLog(item) {\n      await delay();\n      var sum = item.reduce((a, b) => a + b, 0);\n      var formatsum = Number(sum).toFixed(2);\n      document.getElementById('earned').textContent = formatsum;\n    }\n    async function processArray(rwdArray) {\n      for (const item of rwdArray) {\n        await delayedLog(item);\n      }\n    }\n    return processArray([rwdArray]);\n  }\n  async function claimit() {\n    var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n    const arraynft = Array.from(rawnfts.map(Number));\n    const tokenid = arraynft.filter(Number);\n    await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n      Web3Alc.eth.getBlock('pending').then((block) => {\n        var baseFee = Number(block.baseFeePerGas);\n        var maxPriority = Number(tip);\n        var maxFee = maxPriority + baseFee;\n        tokenid.forEach(async (id) => {\n          await vaultcontract.methods.claim([id])\n            .send({\n              from: account,\n              maxFeePerGas: maxFee,\n              maxPriorityFeePerGas: maxPriority\n            })\n        })\n      });\n    })\n  }  \n  async function unstakeall() {\n    var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n    const arraynft = Array.from(rawnfts.map(Number));\n    const tokenid = arraynft.filter(Number);\n    await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n      Web3Alc.eth.getBlock('pending').then((block) => {\n        var baseFee = Number(block.baseFeePerGas);\n        var maxPriority = Number(tip);\n        var maxFee = maxPriority + baseFee;\n        tokenid.forEach(async (id) => {\n          await vaultcontract.methods.unstake([id])\n            .send({\n              from: account,\n              maxFeePerGas: maxFee,\n              maxPriorityFeePerGas: maxPriority\n            })\n        })\n      });\n    })\n    }\n    async function mintnative() {\n      var _mintAmount = Number(outvalue);\n      var mintRate = Number(await contract.methods.cost().call());\n      var totalAmount = mintRate * _mintAmount;\n      await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n        Web3Alc.eth.getBlock('pending').then((block) => {\n          var baseFee = Number(block.baseFeePerGas);\n          var maxPriority = Number(tip);\n          var maxFee = baseFee + maxPriority\n          contract.methods.mint(account, _mintAmount)\n            .send({ from: account,\n              value: String(totalAmount),\n              maxFeePerGas: maxFee,\n              maxPriorityFeePerGas: maxPriority\n            });\n        });\n      });\n    }\n\n    async function mint0() {\n      var _pid = \"0\";\n      var erc20address = await contract.methods.getCryptotoken(_pid).call();\n      var currency = new web3.eth.Contract(TOKENABI, erc20address);\n      var mintRate = await contract.methods.getNFTCost(_pid).call();\n      var _mintAmount = Number(outvalue);\n      var totalAmount = mintRate * _mintAmount;\n      await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n        Web3Alc.eth.getBlock('pending').then((block) => {\n          var baseFee = Number(block.baseFeePerGas);\n          var maxPriority = Number(tip);\n          var maxFee = maxPriority + baseFee;\n          currency.methods.approve(NFTCONTRACT, String(totalAmount))\n\t\t\t\t\t  .send({\n\t\t\t\t\t    from: account\n            })\n            .then(currency.methods.transfer(NFTCONTRACT, String(totalAmount))\n\t\t\t\t\t    .send({\n  \t\t\t\t\t\t  from: account,\n\t  \t\t\t\t\t  maxFeePerGas: maxFee,\n\t\t  \t\t\t\t  maxPriorityFeePerGas: maxPriority\n\t\t\t  \t\t  },\n                async function (error, transactionHash) {\n                  console.log(\"Transfer Submitted, Hash: \", transactionHash)\n                let transactionReceipt = null\n                  while (transactionReceipt == null) {\n                    transactionReceipt = await web3.eth.getTransactionReceipt(transactionHash);\n                    await sleep(expectedBlockTime)\n                  }\n                  window.console = {\n                    log: function (str) {\n                      var out = document.createElement(\"div\");\n                      out.appendChild(document.createTextNode(str));\n                      document.getElementById(\"txout\").appendChild(out);\n                    }\n                  }\n                  console.log(\"Transfer Complete\", transactionReceipt);\n                  contract.methods.mintpid(account, _mintAmount, _pid)\n                  .send({\n                    from: account,\n                    maxFeePerGas: maxFee,\n                    maxPriorityFeePerGas: maxPriority\n                  });\n              }));\n        });\n      });\n    }\n    const refreshPage = ()=>{\n      window.location.reload();  \n    }\n\n    return (\n      <div className=\"App nftapp\">\n        <nav class=\"navbar navbarfont navbarglow navbar-expand-md navbar-dark bg-dark mb-4\">\n          <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n            <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '25px' }} href=\"#\"></a><img src=\"rfc.x.png\" alt=\"RFC\" width=\"7%\" />\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"25px\" }}>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link active\" aria-current=\"page\" href=\"#\"> Dashboard</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"#\">RFC Merch</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\">NFT Trading Tool</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"px-5\">\n            <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={connectwallet} style={{ fontFamily: \"SF Pro Display\" }}value=\"Connect Your Wallet\" />\n          </div>\n        </nav>\n        <div className=\"container container-style\">\n          <div className=\"col\">\n            <body className=\"nftstaker border-0\">\n              <form style={{ fontFamily: \"SF Pro Display\" }}>\n                <h2 style={{borderRadius: \"14px\",fontWeight: \"300\",fontSize: \"25px\"}}>Rich Fox Club Staking Vault</h2>\n                <h6 style={{ fontWeight: \"300\" }}>First time staking?</h6>\n                <Button onClick={enable} style={{backgroundColor: \"#ffffff10\",boxShadow: \"1px 1px 5px #000000\"}}>Authorize Your Wallet</Button>\n                <div className=\"row px-3\">\n                  <div className=\"col\">\n                    <form class=\"stakingrewards\"style={{borderRadius: \"25px\",boxShadow: \"1px 1px 15px #ffffff\"}}>\n                      <h5 style={{ color: \"#FFFFFF\", fontWeight: \"300\" }}>Your Vault Activity</h5>\n                      <h6 style={{ color: \"#FFFFFF\" }}>Verify Staked Amount</h6>\n                      <Button onClick={verify} style={{backgroundColor: \"#ffffff10\",boxShadow: \"1px 1px 5px #000000\"}}>Verify</Button>\n                      <table className=\"table mt-3 mb-5 px-3 table-dark\">\n                        <tr>\n                          <td style={{ fontSize: \"19px\" }}>Your Staked NFTs:\n                            <span style={{ backgroundColor: \"#ffffff00\",fontSize: \"21px\",color: \"#39FF14\",fontWeight: \"500\",textShadow: \"1px 1px 2px #000000\"}}id=\"yournfts\" ></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td style={{ fontSize: \"19px\" }}>Total Staked NFTs:\n                            <span style={{ backgroundColor: \"#ffffff00\",fontSize: \"21px\",color: \"#39FF14\",fontWeight: \"500\",textShadow: \"1px 1px 2px #000000\"}}id=\"stakedbalance\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td style={{ fontSize: \"19px\" }}>Unstake All Staked NFTs\n                            <Button onClick={unstakeall} className=\"mb-3\"style={{backgroundColor: \"#ffffff10\",boxShadow: \"1px 1px 5px #000000\"}}>Unstake All</Button>\n                          </td>\n                        </tr>\n                      </table>\n                    </form>\n                  </div>\n                  <img className=\"col-lg-4\" src=\"art.png\" alt=\"Rich Fox Club\" />\n                  <div className=\"col\">\n                    <form className=\"stakingrewards\"style={{borderRadius: \"25px\", boxShadow: \"1px 1px 15px #ffffff\",fontFamily: \"SF Pro Display\"}}>\n                      <h5 style={{ color: \"#FFFFFF\", fontWeight: \"300\" }}>Staking Rewards</h5>\n                      <Button onClick={rewardinfo} style={{backgroundColor: \"#ffffff10\",boxShadow: \"1px 1px 5px #000000\"}}>Earned RFC.X Tokens</Button>\n                      <div id=\"earned\"style={{color: \"#39FF14\",marginTop: \"5px\",fontSize: \"25px\",fontWeight: \"500\",textShadow: \"1px 1px 2px #000000\"}}>RFC.X Earned</div>\n                      <div className=\"col-12 mt-2\">\n                          <div style={{ color: \"white\" }}>Claim Rewards</div>\n                          <Button onClick={claimit} style={{ backgroundColor: \"#ffffff10\", boxShadow: \"1px 1px 5px #000000\" }} className=\"mb-2\">Claim</Button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                <div className=\"row px-4 pt-2\">\n                  <div class=\"header\">\n                    <div style={{ fontSize: \"25px\", borderRadius: \"14px\", color: \"#ffffff\", fontWeight: \"300\" }}>The Fox Hole Trait Rewards Board</div>\n                    <table className=\"table px-3 table-bordered table-dark\">\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th scope=\"col\">Trait</th>\n                          <th scope=\"col\">Rewards Per Day</th>\n                          <th scope=\"col\">Exchangeable Items</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>Cigar</td>\n                          <td class=\"amount\" data-test-id=\"rewards-summary-ads\">\n                            <span class=\"amount\">TBD</span>&nbsp;\n                            <span class=\"currency\">RFC.X or RFC NFT</span>\n                          </td>\n                          <td class=\"exchange\">\n                            <span class=\"amount\">2</span>&nbsp;\n                            <span class=\"currency\">NFTs/M</span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Backpack</td>\n                          <td class=\"amount\" data-test-id=\"rewards-summary-ac\">\n                            <span class=\"amount\">TBD</span>&nbsp;\n                            <span class=\"currency\">RFC.X or RFC NFT</span>\n                          </td>\n                          <td class=\"exchange\">\n                            <span class=\"amount\">10</span>&nbsp;\n                            <span class=\"currency\">NFTs/M</span>\n                          </td>\n                        </tr>\n                        <tr className=\"stakegoldeffect\">\n                          <td>Party Hat</td>\n                          <td\n                            class=\"amount\"\n                            data-test-id=\"rewards-summary-one-time\"\n                          >\n                          <span class=\"amount\">TBD</span>&nbsp;\n                          <span class=\"currency\">RFC.X or RFC NFT</span>\n                          </td>\n                          <td class=\"exchange\">\n                            <span class=\"amount\">25 NFTs/M or </span>\n                            <span class=\"currency\">100 N2DR/M</span>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n\n                    <div class=\"header\">\n                      <div style={{ fontSize: \"25px\", borderRadius: \"14px\", fontWeight: \"300\" }} >RFC.x Stake Farms</div>\n                      <table className=\"table table-bordered table-dark\" style={{ borderRadius: \"14px\" }} >\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\">Farm Pools</th>\n                            <th scope=\"col\">Harvest Daily Earnings</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Stake RFC.X to Earn Even More!</td>\n                            <td class=\"amount\" data-test-id=\"rewards-summary-ads\">\n                              <span class=\"amount\">0.01</span>&nbsp; <span class=\"currency\">Per RFC.X Token</span>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Stake RFC.X to Earn RFC.X+</td>\n                            <td class=\"amount\" data-test-id=\"rewards-summary-ac\">\n                              <span class=\"amount\">0.005</span>&nbsp; <span class=\"currency\">Per RFC.X Token</span>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </body>\n          </div>\n        </div>\n        <div className='row nftportal mt-3'>\n          <div className='col mt-4 ml-3'>\n            <img src=\"rfc.x.png\" alt=\"Rich Fox Club\" width={'60%'}></img>\n          </div>\n        <div className='col'>\n          <h1 className='n2dtitlestyle mt-3'>Your NFT Portal</h1>\n          <Button onClick={refreshPage} style={{ backgroundColor: \"#000000\", boxShadow: \"1px 1px 5px #000000\" }}>Refresh NFT Portal</Button>\n        </div>\n        <div className='col mt-3 mr-5'>\n          <img src=\"ethereum.png\" alt=\"eth\" width={'60%'}></img>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\nexport default Nft\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nconst root = ReactDOM.createRoot(App);\nroot.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}